# Name: Shwetha Srinivasan
# exploitFunction() is a function where the user tests each
# cafe first, gets a certain happiness value from each cafe
# based a certain happiness value from each cafe based on the
# mean happiness value and standard deviation, and goes to
# that cafe only for the next 297 days. This function
# calculates the expected happiness value at the end
# of the 300 days and returns that value.
# Net regret is calculated by subtracting expected happiness
# from the optimum happiness.
import random
#Declaration of global variables and lists
cafe_means = [7, 4, 10]
cafe_std = [3, 10, 6]
best_cafe = ""
optH = 300* max(cafe_means)



def exploitOnly():
    optimum_happiness = 0
    # storing happiness values generated by going to each cafe
    # once in separate variables.
    happiness1 = random.normalvariate(cafe_means[0], cafe_std[0])
    happiness2 = random.normalvariate(cafe_means[1], cafe_std[1])
    happiness3 = random.normalvariate(cafe_means[2], cafe_std[2])
    # Adding the happiness values obtained from each cafe
    # in the first three days
    total_happiness = happiness1 + happiness2 + happiness3
    i = 0
    # finding out which cafe is the best based on first
    # three day values
    if (happiness1 > happiness2 and happiness1 > happiness3):
        best_cafe = "1"
    elif (happiness2 > happiness1 and happiness2 > happiness3):
        best_cafe = "2"
    else: #(happiness3 > happiness1 and happiness3 > happiness2):
        best_cafe = "3"
    while 297 > i:
    #Visiting the same cafe the next 297 days.
    # Also, finding the value of optimum happiness based
    # on which cafe is the best
        if(best_cafe == "1"):
            total_happiness += random.normalvariate(cafe_means[0], cafe_std[0])

        elif(best_cafe == "2"):
            total_happiness += random.normalvariate(cafe_means[1], cafe_std[1])

        elif (best_cafe == "3"):
            total_happiness += random.normalvariate(cafe_means[2], cafe_std[2])

        i += 1
    return total_happiness
# storing value returned from the function in expExploitH

expExploitH = exploitOnly()
expExploitR = optH - expExploitH


#Calculating expExploitR


#Printing these variable values
print(f"Optimum happiness is{optH}")
print(f"expected_happiness is {expExploitH}")
print(f"expected regret is {expExploitR}")











